{#

/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   - id: The paragraph ID.
 *   - bundle: The type of the paragraph, for example, "image" or "text".
 *   - authorid: The user ID of the paragraph author.
 *   - createdtime: Formatted creation date. Preprocess functions can
 *     reformat it by calling format_date() with the desired parameters on
 *     $variables['paragraph']->getCreatedTime().
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{%
set classes = [
  'paragraph',
  'paragraph--type--' ~ paragraph.bundle|clean_class,
  view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
]
%}


{#@todo these should only be shown for their respective bundles.#}
{{ attach_library('dd/action-link') }}
{{ attach_library('dd/action-download') }}
{{ attach_library('dd/action-tweet') }}
{{ attach_library('dd/action-clip') }}

{% block content %}

  {% if paragraph.bundle == "tweet_legislator_action" %}

    {% include "@dd/components/actions/action-tweet.twig"
      with {
        action_type: 'tweet',
        action: 'Tweet Legislator'
      }
    %}

    {% elseif paragraph.bundle == "email_action" %}

    {% include "@dd/components/actions/action-links.twig"
      with {
        action_type: 'email',
        action: 'Email Legislator'
      }
    %}
  {% elseif paragraph.bundle == "email_governor" %}

    {% include "@dd/components/actions/action-links.twig"
    with {
    action_type: 'email',
    action: 'Email Governor'
    }
    %}
  {% elseif paragraph.bundle == "fax_action" %}

    {% include "@dd/components/actions/action-links.twig"
      with {
        action_type: 'fax',
        action: 'Fax Legislator'
      }
    %}
  {% elseif paragraph.bundle == "fax_governor" %}

    {% include "@dd/components/actions/action-links.twig"
    with {
    action_type: 'fax',
    action: 'Fax Governor'
    }
    %}

  {% elseif paragraph.bundle == "phone_action" %}

    {% include "@dd/components/actions/action-links.twig"
      with {
        action_type: 'phone',
        action: 'Call Legislator'
      }
    %}
  {% elseif paragraph.bundle == "call_governor" %}

    {% include "@dd/components/actions/action-links.twig"
    with {
    action_type: 'phone',
    action: 'Call Governor'
    }
    %}

  {% elseif paragraph.bundle == "letter_to_editor" %}

    {% include "@dd/components/actions/action-letter-to-editor.twig"
      with {
        action_type: 'letter',
        action: 'Letter To Editor',
        body: paragraph.get('field_email_body').value,
        subject: paragraph.get('field_email_subject').value,
        city: content.city,
        state: content.state,
        zip: content.zip,
        street: content.street
    }
    %}

  {% elseif paragraph.bundle == "download_action" %}
    {% include "@dd/components/actions/action-download.twig"
      with {
        action: 'Download File',
        file: content.field_download_action_file[0],
        description: content.field_download_description,
      }
    %}

  {% elseif paragraph.bundle == "display_text" %}
    {% include "@dd/components/actions/action-text.twig"
      with {
        action: 'Display Text to Visitor',
        text: content.field_action_body
    }

    %}

  {% elseif paragraph.bundle == "display_video_clip_montage" %}
    {% include "@dd/components/actions/action-clip.twig"
      with {
        action: 'Share Video',
        video_id: content.field_video_clip[0]['#dd_clip'].field_videoid[0].value,
        video_link_text: paragraph.field_video_link_text.value
      }
    %}

  {% endif %}

{% endblock %}

