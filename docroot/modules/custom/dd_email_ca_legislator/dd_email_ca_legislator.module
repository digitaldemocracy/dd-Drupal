<?php

/**
 * @file
 * Contains dd_email_ca_legislator.module..
 */

use Drupal\Core\Routing\RouteMatchInterface;
use \Drupal\node\Entity\Node;
use Drupal\Component\Utility\SafeMarkup;
use Drupal\Core\Url;

/**
 * Implements hook_help().
 */
function dd_email_ca_legislator_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the dd_person module.
    case 'help.page.dd_email_ca_legislator':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('This module helps you email CA legislators');
      $output .= t(' and email them.');
      $output .= '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function dd_email_ca_legislator_theme($existing, $type, $theme, $path) {
  $variables = array(
    'dd-email-ca-leg' => array(
      'variables' => array(
        'form' => NULL,
        'items' => NULL,
        'title' => NULL,
      ),
      'template' => 'dd-email-ca-leg',
    ),
  );
  return $variables;
}

/**
 * Implements hook_legislators_contact_form(). 
 * @param Array address
 *   Asociative array that stores user address information.
 * @param Array legislators
 *   Associative array that stores legislator information.
 * @param String body
 *   String of the preset message to send to legislator.
 *
 * @return String markup
 *   HTML markup to display on email legislator page.
 */
function dd_email_ca_legislator_legislators_contact_form($address, $legislators, $body, $bcc=null) {
  if ($address['state'] === "CA") {
    $markup = '<div id="leg-contact-list">';
    foreach ($legislators as $house => $leg) {
      $leg_name = $leg['first'] . ' ' . ($leg['middle'] ? $leg['middle'] . ' ' : '') . $leg['last'];
      $title = ($house === "Senate" ? 'Senator ' : 'Assemblymember ');
      $district = ($house === "Assembly" ? 'AD' : 'SD') . sprintf('%02d', $leg['district']);

      $args = array('name' => urlencode($leg_name),
                   'street' => urlencode($address['street']),
                   'zip' => urlencode($address['zipcode']),
                   'city' => urlencode($address['city']),
                   'state' => urlencode($address['state']),
                   'message' => urlencode(html_entity_decode($body)),
                   'bcc' => urlencode($bcc),
                 );
      $url = Url::fromRoute('dd_email_ca_legislator.contact_form',
        array(
          'house' => $house,
          'district' => $district,
          'pid' => $leg['pid'],
        ),
        array('query' => $args)
      )->toString();

      $markup .= '<h3>' . $title . ' ' . $leg_name;
      $markup .= ' - ' . $house . ' District ' . $district . '</h3>';
      $markup .= '<div><p><a href="' . $url; 
      $markup .= '" target="_blank">Email ' . $title . ' ' . $leg_name . '</a></p></div>';
    }
    $markup .= '</div>';
    return $markup;
  }
}

/**
 * Implements hook_legislators_contact_links().
 */
function dd_email_ca_legislator_legislators_contact_links($sender, $legislators,
                                                          $body, $subject, $bcc=null) {
  if (strtoupper($sender['state']) === "CA") {
    foreach ($legislators as $house => $leg) {
      if ($house === "geo_coord") {
        continue;
      }
      $leg_name = $leg['first'] . ' ' . ($leg['middle'] ? $leg['middle'] . ' ' : '') . $leg['last'];
      $arg = array('name' => urlencode($leg_name),
                   'first' => urlencode($sender['first']), 
                   'last' => urlencode($sender['last']),
                   'street' => urlencode($sender['street']),
                   'city' => urlencode($sender['city']),
                   'zip' => urlencode($sender['zip']),
                   'email' => urlencode($sender['email']),
                   'message' => urlencode(html_entity_decode($body)),
                   'bcc' => urlencode($bcc));
      $legislators[$house]['url'] =
        Url::fromRoute(
          'dd_email_ca_legislator.contact_form',
          array(
            'house' => $house,
            'district' => $leg['district'],
            'pid' => $leg['pid'],
          ),
          array('query' => $arg))->toString();
      $legislators[$house]['name'] =
        ($house === "Senate" ? "Senator " : "Assemblymember ") .
                   $leg['first'] . 
                   (' ' . $leg['middle'] . ' ' ? $leg['middle'] : ' ')
                   . $leg['last'];
      $legislators[$house]['target'] = '_blank';
    }
    return $legislators;
  } 
}

/**
 * Implements hook_mail().
 */
function dd_email_ca_legislator_mail($key, &$message, $params) {
  $options = array(
    'langcode' => $message['langcode'],
  );

  switch ($key) {
  case 'email_ca_legislator':
    $message['headers']['Content-Type'] = 'text/plain; charset=UTF-8; format=flowed; delsp=yes';
    $message['from'] = \Drupal::config('system.site')->get('mail');
    $message['subject'] = $params['subject'];
    $message['body'][] = $params['message'];
    break;
  }
}

